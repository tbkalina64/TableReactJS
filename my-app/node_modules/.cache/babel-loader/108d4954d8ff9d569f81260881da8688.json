{"ast":null,"code":"export default class ApiClient {\n  constructor() {\n    this._apiData = 'https://jsonplaceholder.typicode.com';\n  }\n\n  async getResource(url) {\n    const response = await fetch(`${this._apiData}${url}`);\n\n    if (!response.ok) {\n      throw new Error(`Could not fetch  ${url}` + `, received ${response.status}`);\n    }\n\n    return await response.json();\n  }\n\n  getAllUsers() {\n    return this.getResource(`/users/`);\n  }\n\n  getUser(id) {\n    return this.getResource(`/users/${id}`);\n  }\n\n}\nconst apiUsers = new ApiClient();\napiUsers.getAllUsers().then(users => {\n  users.forEach(user => {\n    console.log(user.name);\n  });\n}).catch(err => {\n  console.error('Could not fetch', err);\n});","map":{"version":3,"sources":["C:/Users/TBKalina/Desktop/TableReactJS/my-app/src/components/api-services.js"],"names":["ApiClient","_apiData","getResource","url","response","fetch","ok","Error","status","json","getAllUsers","getUser","id","apiUsers","then","users","forEach","user","console","log","name","catch","err","error"],"mappings":"AAAA,eAAe,MAAMA,SAAN,CAAgB;AAAA;AAAA,SAE3BC,QAF2B,GAEhB,sCAFgB;AAAA;;AAI3B,QAAMC,WAAN,CAAkBC,GAAlB,EAAuB;AACnB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKJ,QAAS,GAAEE,GAAI,EAAxB,CAA5B;;AAEA,QAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB;AACd,YAAM,IAAIC,KAAJ,CAAW,oBAAmBJ,GAAI,EAAxB,GAA6B,cAAaC,QAAQ,CAACI,MAAO,EAApE,CAAN;AACH;;AACD,WAAO,MAAMJ,QAAQ,CAACK,IAAT,EAAb;AACH;;AACDC,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKR,WAAL,CAAkB,SAAlB,CAAP;AACH;;AACDS,EAAAA,OAAO,CAACC,EAAD,EAAK;AACR,WAAO,KAAKV,WAAL,CAAkB,UAASU,EAAG,EAA9B,CAAP;AACH;;AAjB0B;AAoB/B,MAAMC,QAAQ,GAAG,IAAIb,SAAJ,EAAjB;AAEAa,QAAQ,CACHH,WADL,GAEKI,IAFL,CAEWC,KAAD,IAAW;AACbA,EAAAA,KAAK,CAACC,OAAN,CAAeC,IAAD,IAAU;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;AACH,GAFD;AAGH,CANL,EAOKC,KAPL,CAOYC,GAAD,IAAS;AACZJ,EAAAA,OAAO,CAACK,KAAR,CAAc,iBAAd,EAAiCD,GAAjC;AACH,CATL","sourcesContent":["export default class ApiClient {\r\n\r\n    _apiData = 'https://jsonplaceholder.typicode.com';\r\n\r\n    async getResource(url) {\r\n        const response = await fetch(`${this._apiData}${url}`);\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`Could not fetch  ${url}` + `, received ${response.status}`);\r\n        }\r\n        return await response.json();\r\n    }\r\n    getAllUsers() {\r\n        return this.getResource(`/users/`);\r\n    }\r\n    getUser(id) {\r\n        return this.getResource(`/users/${id}`);\r\n    }\r\n}\r\n\r\nconst apiUsers = new ApiClient();\r\n\r\napiUsers\r\n    .getAllUsers()\r\n    .then((users) => {\r\n        users.forEach((user) => {\r\n            console.log(user.name);\r\n        });\r\n    })\r\n    .catch((err) => {\r\n        console.error('Could not fetch', err);\r\n    });\r\n"]},"metadata":{},"sourceType":"module"}