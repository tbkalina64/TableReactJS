{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\TBKalina\\\\Desktop\\\\TableReactJS\\\\my-app\\\\src\\\\components\\\\Table.js\";\nimport React from 'react';\nimport TableTr from './TableTr';\nimport './api-services';\n\nconst Table = () => {\n  // class ApiClient {\n  //     _apiData = 'https://jsonplaceholder.typicode.com';\n  //     async getResource(url) {\n  //         const response = await fetch(`${this._apiData}${url}`);\n  //         if (!response.ok) {\n  //             throw new Error(`Could not fetch  ${url}` + `, received ${response.status}`);\n  //         }\n  //         return await response.json();\n  //     }\n  //     getAllUsers() {\n  //         return this.getResource(`/users/`);\n  //     }\n  //     getUser(id) {\n  //         return this.getResource(`/users/${id}`);\n  //     }\n  // }\n  // const apiUsers = new ApiClient();\n  // apiUsers\n  //     .getAllUsers()\n  //     .then((users) => {\n  //         users.forEach((user) => {\n  //             console.log(user.name);\n  //         });\n  //     })\n  //     .catch((err) => {\n  //         console.error('Could not fetch', err);\n  //     });\n  // const renderHeader = () => {\n  //     let headerElement = ['id', 'name', 'email', 'phone', 'operation']\n  //     return headerElement.map((key, index) => {\n  //         return <th key={index}>{key.toUpperCase()}</th>\n  //     })\n  // }\n  // const renderBody = () => {\n  //     return users.map(({ id, name, email, phone }) => {\n  //         return (\n  //             <tr key={id}>\n  //                 <td>{id}</td>\n  //                 <td>{name}</td>\n  //                 <td>{email}</td>\n  //                 <td>{phone}</td>\n  //                 <td className='opration'>\n  //                     <button className='button' onClick={() => removeData(id)}>Delete</button>\n  //                 </td>\n  //             </tr>\n  //         )\n  //     })\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TableTr, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"employee\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: renderHeader()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: renderBody()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/TBKalina/Desktop/TableReactJS/my-app/src/components/Table.js"],"names":["React","TableTr","Table","renderHeader","renderBody"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,gBAAP;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAEhB;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,sBACI;AAAA,4BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,EAAE,EAAC,UAAV;AAAA,8BACI;AAAA,+BACI;AAAA,oBAAKC,YAAY;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,kBACKC,UAAU;AADf;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA3ED;;KAAMF,K;AA6EN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nimport TableTr from './TableTr';\r\nimport './api-services';\r\n\r\nconst Table = () => {\r\n\r\n    // class ApiClient {\r\n\r\n    //     _apiData = 'https://jsonplaceholder.typicode.com';\r\n    \r\n    //     async getResource(url) {\r\n    //         const response = await fetch(`${this._apiData}${url}`);\r\n    \r\n    //         if (!response.ok) {\r\n    //             throw new Error(`Could not fetch  ${url}` + `, received ${response.status}`);\r\n    //         }\r\n    //         return await response.json();\r\n    //     }\r\n    //     getAllUsers() {\r\n    //         return this.getResource(`/users/`);\r\n    //     }\r\n    //     getUser(id) {\r\n    //         return this.getResource(`/users/${id}`);\r\n    //     }\r\n    // }\r\n    \r\n    // const apiUsers = new ApiClient();\r\n    \r\n    // apiUsers\r\n    //     .getAllUsers()\r\n    //     .then((users) => {\r\n    //         users.forEach((user) => {\r\n    //             console.log(user.name);\r\n    //         });\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.error('Could not fetch', err);\r\n    //     });\r\n    \r\n\r\n    // const renderHeader = () => {\r\n    //     let headerElement = ['id', 'name', 'email', 'phone', 'operation']\r\n\r\n    //     return headerElement.map((key, index) => {\r\n    //         return <th key={index}>{key.toUpperCase()}</th>\r\n    //     })\r\n    // }\r\n    \r\n    // const renderBody = () => {\r\n    //     return users.map(({ id, name, email, phone }) => {\r\n    //         return (\r\n    //             <tr key={id}>\r\n    //                 <td>{id}</td>\r\n    //                 <td>{name}</td>\r\n    //                 <td>{email}</td>\r\n    //                 <td>{phone}</td>\r\n    //                 <td className='opration'>\r\n    //                     <button className='button' onClick={() => removeData(id)}>Delete</button>\r\n    //                 </td>\r\n    //             </tr>\r\n    //         )\r\n    //     })\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <TableTr/>\r\n            <table id='employee'>\r\n                <thead>\r\n                    <tr>{renderHeader()}</tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderBody()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Table;"]},"metadata":{},"sourceType":"module"}