{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\TBKalina\\\\Desktop\\\\TableReactJS\\\\my-app\\\\src\\\\components\\\\Table.js\";\nimport React from 'react';\n\nconst Table = ({\n  data\n}) => {\n  const tableRows = data.rows;\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: tableRows.map((rows, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: rows.map((value, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n        children: rows.value\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/TBKalina/Desktop/TableReactJS/my-app/src/components/Table.js"],"names":["React","Table","data","tableRows","rows","map","index","value","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAc;AACxB,QAAMC,SAAS,GAAGD,IAAI,CAACE,IAAvB;AAEA,sBACI;AAAA,cACGD,SAAS,CAACE,GAAV,CAAc,CAACD,IAAD,EAAOE,KAAP,kBACb;AAAA,gBACGF,IAAI,CAACC,GAAL,CAAS,CAACE,KAAD,EAAQC,CAAR,kBACR;AAAA,kBAAaJ,IAAI,CAACG;AAAlB,SAASC,CAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH,OAASF,KAAT;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAdD;;KAAML,K;AAeN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\n\r\nconst Table = ( {data} ) => {\r\n    const tableRows = data.rows;\r\n\r\n    return(\r\n        <tbody>\r\n          {tableRows.map((rows, index) =>\r\n            <tr key={index}>\r\n              {rows.map((value, i) =>\r\n                <td key={i}>{rows.value}</td>\r\n              )}\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      )\r\n};\r\nexport default Table;"]},"metadata":{},"sourceType":"module"}