{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\TBKalina\\\\Desktop\\\\TableReactJS\\\\my-app\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst URL = 'https://jsonplaceholder.typicode.com/users';\n\nconst Table = () => {\n  _s();\n\n  const [employees, setEmployees] = useState([]);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    const response = await axios.get(URL);\n    setEmployees(response.data);\n  };\n\n  const removeData = id => {\n    axios.delete(`${URL}/${id}`).then(res => {\n      const del = employees.filter(employee => id !== employee.id);\n      setEmployees(del);\n    });\n  };\n\n  const renderHeader = () => {\n    let headerElement = ['id', 'name', 'email', 'phone', 'operation'];\n    return headerElement.map((key, index) => {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: key.toUpperCase()\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }, this);\n    });\n  };\n\n  const renderBody = () => {\n    return employees && employees.map(({\n      id,\n      name,\n      email,\n      phone\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"opration\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => removeData(id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"title\",\n      children: \"React Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"employee\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: renderHeader()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: renderBody()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Table, \"/A1Ii8+9z2SDNTFDutGp9pjEZTU=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/TBKalina/Desktop/TableReactJS/my-app/src/index.js"],"names":["React","useState","useEffect","axios","URL","Table","employees","setEmployees","getData","response","get","data","removeData","id","delete","then","res","del","filter","employee","renderHeader","headerElement","map","key","index","toUpperCase","renderBody","name","email","phone"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,4CAAZ;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,OAAO,GAAG,YAAY;AAExB,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUN,GAAV,CAAvB;AACAG,IAAAA,YAAY,CAACE,QAAQ,CAACE,IAAV,CAAZ;AACH,GAJD;;AAMA,QAAMC,UAAU,GAAIC,EAAD,IAAQ;AAEvBV,IAAAA,KAAK,CAACW,MAAN,CAAc,GAAEV,GAAI,IAAGS,EAAG,EAA1B,EAA6BE,IAA7B,CAAkCC,GAAG,IAAI;AACrC,YAAMC,GAAG,GAAGX,SAAS,CAACY,MAAV,CAAiBC,QAAQ,IAAIN,EAAE,KAAKM,QAAQ,CAACN,EAA7C,CAAZ;AACAN,MAAAA,YAAY,CAACU,GAAD,CAAZ;AACH,KAHD;AAIH,GAND;;AAQA,QAAMG,YAAY,GAAG,MAAM;AACvB,QAAIC,aAAa,GAAG,CAAC,IAAD,EAAO,MAAP,EAAe,OAAf,EAAwB,OAAxB,EAAiC,WAAjC,CAApB;AAEA,WAAOA,aAAa,CAACC,GAAd,CAAkB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACrC,0BAAO;AAAA,kBAAiBD,GAAG,CAACE,WAAJ;AAAjB,SAASD,KAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,CAAP;AAGH,GAND;;AAQA,QAAME,UAAU,GAAG,MAAM;AACrB,WAAOpB,SAAS,IAAIA,SAAS,CAACgB,GAAV,CAAc,CAAC;AAAET,MAAAA,EAAF;AAAMc,MAAAA,IAAN;AAAYC,MAAAA,KAAZ;AAAmBC,MAAAA;AAAnB,KAAD,KAAgC;AAC9D,0BACI;AAAA,gCACI;AAAA,oBAAKhB;AAAL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKc;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAI,UAAA,SAAS,EAAC,UAAd;AAAA,iCACI;AAAQ,YAAA,SAAS,EAAC,QAAlB;AAA2B,YAAA,OAAO,EAAE,MAAMjB,UAAU,CAACC,EAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA,SAASA,EAAT;AAAA;AAAA;AAAA;AAAA,cADJ;AAWH,KAZmB,CAApB;AAaH,GAdD;;AAgBA,sBACI;AAAA,4BACI;AAAI,MAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,EAAE,EAAC,UAAV;AAAA,8BACI;AAAA,+BACI;AAAA,oBAAKO,YAAY;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,kBACKM,UAAU;AADf;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAaH,CA1DD;;GAAMrB,K;;KAAAA,K;AA6DN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst URL = 'https://jsonplaceholder.typicode.com/users'\r\n\r\nconst Table = () => {\r\n    const [employees, setEmployees] = useState([])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    const getData = async () => {\r\n\r\n        const response = await axios.get(URL)\r\n        setEmployees(response.data)\r\n    }\r\n\r\n    const removeData = (id) => {\r\n\r\n        axios.delete(`${URL}/${id}`).then(res => {\r\n            const del = employees.filter(employee => id !== employee.id)\r\n            setEmployees(del)\r\n        })\r\n    }\r\n\r\n    const renderHeader = () => {\r\n        let headerElement = ['id', 'name', 'email', 'phone', 'operation']\r\n\r\n        return headerElement.map((key, index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n\r\n    const renderBody = () => {\r\n        return employees && employees.map(({ id, name, email, phone }) => {\r\n            return (\r\n                <tr key={id}>\r\n                    <td>{id}</td>\r\n                    <td>{name}</td>\r\n                    <td>{email}</td>\r\n                    <td>{phone}</td>\r\n                    <td className='opration'>\r\n                        <button className='button' onClick={() => removeData(id)}>Delete</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 id='title'>React Table</h1>\r\n            <table id='employee'>\r\n                <thead>\r\n                    <tr>{renderHeader()}</tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderBody()}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Table"]},"metadata":{},"sourceType":"module"}