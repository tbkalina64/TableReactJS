{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\TBKalina\\\\Desktop\\\\TableReactJS\\\\my-app\\\\src\\\\components\\\\Table.js\";\nimport React from 'react';\n\nconst Table = () => {\n  class ApiClient {\n    constructor() {\n      this._apiData = 'https://jsonplaceholder.typicode.com';\n    }\n\n    async getResource(url) {\n      const response = await fetch(`${this._apiData}${url}`);\n\n      if (!response.ok) {\n        throw new Error(`Could not fetch  ${url}` + `, received ${response.status}`);\n      }\n\n      return await response.json();\n    }\n\n    getAllUsers() {\n      return this.getResource(`/users/`);\n    }\n\n    getUser(id) {\n      return this.getResource(`/users/${id}`);\n    }\n\n  }\n\n  const apiUsers = new ApiClient();\n  apiUsers.getAllUsers().then(users => {\n    users.forEach(user => {\n      console.log(user.name);\n\n      /*#__PURE__*/\n      _jsxDEV(\"p\", {\n        children: [\"$\", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n    });\n  }).catch(err => {\n    console.error('Could not fetch', err);\n  }); // const elements = users.map((user, id) => {\n  //     return (\n  //         <tr>\n  //             ${user.name}\n  //         </tr>\n  //     )\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"users\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/TBKalina/Desktop/TableReactJS/my-app/src/components/Table.js"],"names":["React","Table","ApiClient","_apiData","getResource","url","response","fetch","ok","Error","status","json","getAllUsers","getUser","id","apiUsers","then","users","forEach","user","console","log","name","catch","err","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAEhB,QAAMC,SAAN,CAAgB;AAAA;AAAA,WAEZC,QAFY,GAED,sCAFC;AAAA;;AAIZ,UAAMC,WAAN,CAAkBC,GAAlB,EAAuB;AACnB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKJ,QAAS,GAAEE,GAAI,EAAxB,CAA5B;;AAEA,UAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAW,oBAAmBJ,GAAI,EAAxB,GAA6B,cAAaC,QAAQ,CAACI,MAAO,EAApE,CAAN;AACH;;AACD,aAAO,MAAMJ,QAAQ,CAACK,IAAT,EAAb;AACH;;AACDC,IAAAA,WAAW,GAAG;AACV,aAAO,KAAKR,WAAL,CAAkB,SAAlB,CAAP;AACH;;AACDS,IAAAA,OAAO,CAACC,EAAD,EAAK;AACR,aAAO,KAAKV,WAAL,CAAkB,UAASU,EAAG,EAA9B,CAAP;AACH;;AAjBW;;AAoBhB,QAAMC,QAAQ,GAAG,IAAIb,SAAJ,EAAjB;AAEAa,EAAAA,QAAQ,CACHH,WADL,GAEKI,IAFL,CAEWC,KAAD,IAAW;AACbA,IAAAA,KAAK,CAACC,OAAN,CAAeC,IAAD,IAAU;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;;AACA;AAAA;AAAA,wBACEH,IAAI,CAACG,IADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAGH,KALD;AAMH,GATL,EAUKC,KAVL,CAUYC,GAAD,IAAS;AACZJ,IAAAA,OAAO,CAACK,KAAR,CAAc,iBAAd,EAAiCD,GAAjC;AACH,GAZL,EAxBgB,CAsChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,EAAE,EAAC,OAAV;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAzDD;;KAAMvB,K;AA2DN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\n\r\nconst Table = () => {\r\n\r\n    class ApiClient {\r\n\r\n        _apiData = 'https://jsonplaceholder.typicode.com';\r\n\r\n        async getResource(url) {\r\n            const response = await fetch(`${this._apiData}${url}`);\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch  ${url}` + `, received ${response.status}`);\r\n            }\r\n            return await response.json();\r\n        }\r\n        getAllUsers() {\r\n            return this.getResource(`/users/`);\r\n        }\r\n        getUser(id) {\r\n            return this.getResource(`/users/${id}`);\r\n        }\r\n    }\r\n\r\n    const apiUsers = new ApiClient();\r\n\r\n    apiUsers\r\n        .getAllUsers()\r\n        .then((users) => {\r\n            users.forEach((user) => {\r\n                console.log(user.name);\r\n                <p>\r\n                ${user.name}\r\n            </p>\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.error('Could not fetch', err);\r\n        });\r\n\r\n    // const elements = users.map((user, id) => {\r\n    //     return (\r\n    //         <tr>\r\n    //             ${user.name}\r\n    //         </tr>\r\n    //     )\r\n    // });\r\n\r\n    return (\r\n        <div>\r\n            <h1>React Table</h1>\r\n            <table id='users'>\r\n                <thead></thead>\r\n                <tbody>\r\n                    {/* {renderBody()} */}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Table;"]},"metadata":{},"sourceType":"module"}