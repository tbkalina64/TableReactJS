{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\TBKalina\\\\Desktop\\\\TableReactJS\\\\my-app\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n\n  class ApiClient {\n    constructor() {\n      this._apiData = 'https://jsonplaceholder.typicode.com';\n    }\n\n    async getResource(url) {\n      const response = await fetch(`${this._apiData}${url}`);\n\n      if (!response.ok) {\n        throw new Error(`Could not fetch  ${url}` + `, received ${response.status}`);\n      }\n\n      return await response.json();\n    }\n\n    getAllUsers() {\n      return this.getResource(`/users/`);\n    }\n\n    getUser(id) {\n      return this.getResource(`/users/${id}`);\n    }\n\n  }\n\n  const apiUsers = new ApiClient();\n  apiUsers.getAllUsers().then(users => {\n    users.forEach(user => {\n      //     console.log(user.name);\n      //     <p>\n      //     ${user.name}\n      // </p>\n      const createBody = () => {\n        return data.map(({\n          id,\n          name,\n          email,\n          phone\n        }) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"deleteBtn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this);\n        });\n      };\n    });\n  }).catch(err => {\n    console.error('Could not fetch', err);\n  });\n\n  const createHeader = () => {\n    let headerElement = ['id', 'name', 'email', 'phone', 'deleteBtn'];\n    return headerElement.map((key, index) => {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: key.toUpperCase()\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 24\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"users\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: createHeader()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: createBody()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 88,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/TBKalina/Desktop/TableReactJS/my-app/src/index.js"],"names":["React","useState","ReactDOM","App","data","setData","ApiClient","_apiData","getResource","url","response","fetch","ok","Error","status","json","getAllUsers","getUser","id","apiUsers","then","users","forEach","user","createBody","map","name","email","phone","catch","err","console","error","createHeader","headerElement","key","index","toUpperCase","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst App = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    class ApiClient {\r\n\r\n        _apiData = 'https://jsonplaceholder.typicode.com';\r\n\r\n        async getResource(url) {\r\n            const response = await fetch(`${this._apiData}${url}`);\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch  ${url}` + `, received ${response.status}`);\r\n            }\r\n            return await response.json();\r\n        }\r\n        getAllUsers() {\r\n            return this.getResource(`/users/`);\r\n        }\r\n        getUser(id) {\r\n            return this.getResource(`/users/${id}`);\r\n        }\r\n    }\r\n\r\n    const apiUsers = new ApiClient();\r\n\r\n    apiUsers\r\n        .getAllUsers()\r\n        .then((users) => {\r\n            users.forEach((user) => {\r\n            //     console.log(user.name);\r\n            //     <p>\r\n            //     ${user.name}\r\n            // </p>\r\n            const createBody = () => {\r\n                return data.map(({ id, name, email, phone }) => {\r\n                    return (\r\n                        <tr key={id}>\r\n                            <td>{id}</td>\r\n                            <td>{name}</td>\r\n                            <td>{email}</td>\r\n                            <td>{phone}</td>\r\n                            <td className='deleteBtn'>\r\n                                {/* <button className='button' onClick={() => removeData(id)}>Delete</button> */}\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })\r\n            }\r\n\r\n\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.error('Could not fetch', err);\r\n        });\r\n\r\n        const createHeader = () => {\r\n            let headerElement = ['id', 'name', 'email', 'phone', 'deleteBtn'];\r\n    \r\n            return headerElement.map((key, index) => {\r\n                return <th key={index}>{key.toUpperCase()}</th>\r\n            })\r\n        }\r\n\r\n\r\n       \r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>React Table</h1>\r\n            <table id='users'>\r\n                <thead>\r\n                    <tr>{ createHeader() }</tr>\r\n                </thead>\r\n                <tbody>\r\n                    { createBody() }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}