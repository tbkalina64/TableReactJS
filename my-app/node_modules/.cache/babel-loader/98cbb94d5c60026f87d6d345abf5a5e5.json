{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\TBKalina\\\\Desktop\\\\TableReactJS\\\\my-app\\\\src\\\\components\\\\Table.js\";\nimport React from 'react';\nimport TableTr from './TableTr';\n\nclass Api {\n  constructor() {\n    this._apiData = 'https://jsonplaceholder.typicode.com';\n  }\n\n  async getResource() {\n    const response = await fetch(`${this._apiData}${url}`);\n\n    if (!response.ok) {\n      throw new Error(`Could not fetch  ${url}` + `, received ${response.status}`);\n    }\n\n    return await response.json();\n  }\n\n  getAllUsers() {\n    return this.getResource(`/users/`);\n  }\n\n  getUser(id) {\n    return this.getResource(`/users/${id}`);\n  }\n\n} // getResource('https://jsonplaceholder.typicode.com/users') .then((data) => {\n// console.log(data); }) .catch((err) => {     console.error('Could not fetch',\n// err); });\n\n\nconst Table = () => {\n  // const [employees, setEmployees] = React.useState([]); React.useEffect(() => {\n  // getData() }, []) const getData = async () => {     const response = await\n  // axios.get(URL)     setEmployees(response.data) } const removeData = (id) => {\n  // axios.delete(`${URL}/${id}`).then(res => {         const del =\n  // employees.filter(employee => id !== employee.id)         setEmployees(del)\n  // }) }\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(TableTr, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/TBKalina/Desktop/TableReactJS/my-app/src/components/Table.js"],"names":["React","TableTr","Api","_apiData","getResource","response","fetch","url","ok","Error","status","json","getAllUsers","getUser","id","Table"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAN,CAAU;AAAA;AAAA,SAENC,QAFM,GAEK,sCAFL;AAAA;;AAIN,QAAMC,WAAN,GAAoB;AAChB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKH,QAAS,GAAEI,GAAI,EAAxB,CAA5B;;AACA,QAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;AACd,YAAM,IAAIC,KAAJ,CAAW,oBAAmBF,GAAI,EAAxB,GAA6B,cAAaF,QAAQ,CAACK,MAAO,EAApE,CAAN;AACH;;AAED,WAAO,MAAML,QAAQ,CAACM,IAAT,EAAb;AACH;;AACDC,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKR,WAAL,CAAkB,SAAlB,CAAP;AACH;;AACDS,EAAAA,OAAO,CAACC,EAAD,EAAK;AACR,WAAO,KAAKV,WAAL,CAAkB,UAASU,EAAG,EAA9B,CAAP;AACH;;AAjBK,C,CAoBV;AACA;AACA;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAEhB;AACA;AACA;AACA;AACA;AACA;AAEA,sBACI;AAAA,4BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CApBD;;KAAMA,K;AAsBN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\n\r\nimport TableTr from './TableTr';\r\n\r\nclass Api {\r\n\r\n    _apiData = 'https://jsonplaceholder.typicode.com';\r\n\r\n    async getResource() {\r\n        const response = await fetch(`${this._apiData}${url}`);\r\n        if (!response.ok) {\r\n            throw new Error(`Could not fetch  ${url}` + `, received ${response.status}`);\r\n        }\r\n\r\n        return await response.json();\r\n    }\r\n    getAllUsers() {\r\n        return this.getResource(`/users/`);\r\n    }\r\n    getUser(id) {\r\n        return this.getResource(`/users/${id}`);\r\n    }\r\n}\r\n\r\n// getResource('https://jsonplaceholder.typicode.com/users') .then((data) => {\r\n// console.log(data); }) .catch((err) => {     console.error('Could not fetch',\r\n// err); });\r\n\r\nconst Table = () => {\r\n\r\n    // const [employees, setEmployees] = React.useState([]); React.useEffect(() => {\r\n    // getData() }, []) const getData = async () => {     const response = await\r\n    // axios.get(URL)     setEmployees(response.data) } const removeData = (id) => {\r\n    // axios.delete(`${URL}/${id}`).then(res => {         const del =\r\n    // employees.filter(employee => id !== employee.id)         setEmployees(del)\r\n    // }) }\r\n\r\n    return (\r\n        <table>\r\n            <TableTr/>\r\n            <tr>\r\n                {/* {data[1]} */}\r\n            </tr>\r\n            <tr>\r\n                {/* {data[2]} */}\r\n            </tr>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default Table;"]},"metadata":{},"sourceType":"module"}