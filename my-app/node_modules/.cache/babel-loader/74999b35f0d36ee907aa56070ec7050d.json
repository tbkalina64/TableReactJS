{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\TBKalina\\\\Desktop\\\\TableReactJS\\\\my-app\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nconst API_HOST = 'https://jsonplaceholder.typicode.com';\nconst INVENTORY_API_URL = `${API_HOST}/users`;\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n\n  const fetchInventory = () => {\n    fetch(`${INVENTORY_API_URL}`).then(res => res.json()).then(json => setData(json));\n  };\n\n  useEffect(() => {\n    fetchInventory();\n  }, []);\n  const [inEditMode, setInEditMode] = useState({\n    status: false,\n    rowKey: null\n  });\n  const [unitPrice, setUnitPrice] = useState(null);\n  /**\r\n   *\r\n   * @param id - The id of the product\r\n   * @param currentUnitPrice - The current unit price of the product\r\n   */\n\n  const onEdit = ({\n    id,\n    currentUnitPrice\n  }) => {\n    setInEditMode({\n      status: true,\n      rowKey: id\n    });\n    setUnitPrice(currentUnitPrice);\n  };\n  /**\r\n   *\r\n   * @param id\r\n   * @param newUnitPrice\r\n   */\n\n\n  const updateInventory = ({\n    id,\n    newUnitPrice\n  }) => {\n    fetch(`${INVENTORY_API_URL}/${id}`, {\n      method: \"PATCH\",\n      body: JSON.stringify({\n        unit_price: newUnitPrice\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => response.json()).then(json => {\n      // reset inEditMode and unit price state values\n      onCancel(); // fetch the updated data\n\n      fetchInventory();\n    });\n  };\n  /**\r\n   *\r\n   * @param id -The id of the product\r\n   * @param newUnitPrice - The new unit price of the product\r\n   */\n\n\n  const onSave = ({\n    id,\n    newUnitPrice\n  }) => {\n    updateInventory({\n      id,\n      newUnitPrice\n    });\n  };\n\n  const onCancel = () => {\n    // reset the inEditMode state value\n    setInEditMode({\n      status: false,\n      rowKey: null\n    }); // reset the unit price state value\n\n    setUnitPrice(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simple Inventory Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Unit Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.product_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.product_category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: inEditMode.status && inEditMode.rowKey === item.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              value: unitPrice,\n              onChange: event => setUnitPrice(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 41\n            }, this) : item.unit_price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: inEditMode.status && inEditMode.rowKey === item.id ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-success\",\n                onClick: () => onSave({\n                  id: item.id,\n                  newUnitPrice: unitPrice\n                }),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-secondary\",\n                style: {\n                  marginLeft: 8\n                },\n                onClick: () => onCancel(),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-primary\",\n              onClick: () => onEdit({\n                id: item.id,\n                currentUnitPrice: item.unit_price\n              }),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"vNvYOWw2MgGTUmXp/ESeYB4Ch60=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/TBKalina/Desktop/TableReactJS/my-app/src/index.js"],"names":["React","useEffect","useState","API_HOST","INVENTORY_API_URL","App","data","setData","fetchInventory","fetch","then","res","json","inEditMode","setInEditMode","status","rowKey","unitPrice","setUnitPrice","onEdit","id","currentUnitPrice","updateInventory","newUnitPrice","method","body","JSON","stringify","unit_price","headers","response","onCancel","onSave","map","item","product_name","product_category","event","target","value","marginLeft"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nconst API_HOST = 'https://jsonplaceholder.typicode.com';\r\nconst INVENTORY_API_URL = `${API_HOST}/users`;\r\n\r\nfunction App() {\r\n    const [data, setData] = useState([]);\r\n\r\n    const fetchInventory = () => {\r\n        fetch(`${INVENTORY_API_URL}`)\r\n            .then(res => res.json())\r\n            .then(json => setData(json));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchInventory();\r\n    }, []);\r\n\r\n\r\n    const [inEditMode, setInEditMode] = useState({\r\n        status: false,\r\n        rowKey: null\r\n    });\r\n\r\n    const [unitPrice, setUnitPrice] = useState(null);\r\n\r\n    /**\r\n     *\r\n     * @param id - The id of the product\r\n     * @param currentUnitPrice - The current unit price of the product\r\n     */\r\n    const onEdit = ({id, currentUnitPrice}) => {\r\n        setInEditMode({\r\n            status: true,\r\n            rowKey: id\r\n        })\r\n        setUnitPrice(currentUnitPrice);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param id\r\n     * @param newUnitPrice\r\n     */\r\n    const updateInventory = ({id, newUnitPrice}) => {\r\n        fetch(`${INVENTORY_API_URL}/${id}`, {\r\n            method: \"PATCH\",\r\n            body: JSON.stringify({\r\n                unit_price: newUnitPrice\r\n            }),\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                // reset inEditMode and unit price state values\r\n                onCancel();\r\n\r\n                // fetch the updated data\r\n                fetchInventory();\r\n            })\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param id -The id of the product\r\n     * @param newUnitPrice - The new unit price of the product\r\n     */\r\n    const onSave = ({id, newUnitPrice}) => {\r\n        updateInventory({id, newUnitPrice});\r\n    }\r\n\r\n    const onCancel = () => {\r\n        // reset the inEditMode state value\r\n        setInEditMode({\r\n            status: false,\r\n            rowKey: null\r\n        })\r\n        // reset the unit price state value\r\n        setUnitPrice(null);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Simple Inventory Table</h1>\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>Product Name</th>\r\n                    <th>Product Category</th>\r\n                    <th>Unit Price</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    data.map((item) => (\r\n                        <tr key={item.id}>\r\n                            <td>{item.product_name}</td>\r\n                            <td>{item.product_category}</td>\r\n                            <td>\r\n                                {\r\n                                    inEditMode.status && inEditMode.rowKey === item.id ? (\r\n                                        <input value={unitPrice}\r\n                                               onChange={(event) => setUnitPrice(event.target.value)}\r\n                                        />\r\n                                    ) : (\r\n                                        item.unit_price\r\n                                    )\r\n                                }\r\n                            </td>\r\n                            <td>\r\n                                {\r\n                                    inEditMode.status && inEditMode.rowKey === item.id ? (\r\n                                        <React.Fragment>\r\n                                            <button\r\n                                                className={\"btn-success\"}\r\n                                                onClick={() => onSave({id: item.id, newUnitPrice: unitPrice})}\r\n                                            >\r\n                                                Save\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                className={\"btn-secondary\"}\r\n                                                style={{marginLeft: 8}}\r\n                                                onClick={() => onCancel()}\r\n                                            >\r\n                                                Cancel\r\n                                            </button>\r\n                                        </React.Fragment>\r\n                                    ) : (\r\n                                        <button\r\n                                            className={\"btn-primary\"}\r\n                                            onClick={() => onEdit({id: item.id, currentUnitPrice: item.unit_price})}\r\n                                        >\r\n                                            Edit\r\n                                        </button>\r\n                                    )\r\n                                }\r\n                            </td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}